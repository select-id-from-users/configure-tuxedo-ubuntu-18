---
- hosts: all

  tasks:


  - name: Install wireguard config of tutti's wireguard VPN
    become: yes
    tags:
      - wireguard
      - vpn
    template:
      src: tutti-wireguard-vpn.j2
      dest: /etc/wireguard/tutti.conf

  - name: Add repo with nvidia drivers
    apt_repository:
      repo: ppa:graphics-drivers
      state: present

  - name: Update APT packages info
    apt:
      update_cache: yes

  - name: Uninstall a list of packages
    become: yes
    tags:
      - apt
    apt:
      name: "{{ packages }}"
      state: absent
    vars:
      packages:
        - nodejs
        - nodejs-dev
        - npm
        - node-gyp
        - libssl1.0-dev

  - name: Install a list of packages
    become: yes
    tags:
      - apt
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - git
      - gitk
      - vim
      - python3-pip
      - nvidia-driver-430
      - keepassx
      - rdesktop
      - network-manager-l2tp-gnome # for tutti VPN
      - python3-venv
      - twine
      - curl
      - httpie
      - tree
      - gnome-tweak-tool
      - shellcheck
      - direnv
      - wireguard
      - openresolv  # to make wireguard work on Ubuntu 18
      - fbreader  # epub reader
      - python3.8
      - python3.8-dev
      - python3.8-venv
      - nodejs
      - easy-rsa

  - name: Add alias R
    tags:
      - bashrc
    become: no
    lineinfile:
      create: yes
      path: ~/.bashrc_local
      regexp: 'alias R'
      line: alias R='R --no-save'
      state: present

  - name: Add alias dp (connect to pgcl1-dev db1 as postgres)
    tags:
      - bashrc
    become: no
    lineinfile:
      create: yes
      path: ~/.bashrc_local
      regexp: 'alias dp'
      line: alias dp='~/tutti-dw/pgcl1/psql-as-postgres-user.sh dev'

  - name: Add alias dm (connect to pgcl1-dev db1 as myself)
    tags:
      - bashrc
    become: no
    lineinfile:
      create: yes
      path: ~/.bashrc_local
      regexp: 'alias dm'
      line: alias dm='~/tutti-dw/pgcl1/psql-as-my-user.sh dev'

  - name: Add alias rs (connect to redshift)
    tags:
      - bashrc
    become: no
    lineinfile:
      create: yes
      path: ~/.bashrc_local
      regexp: 'alias rs'
      line: alias rs='~/tutti-dw/redshift-dw/rs.sh'

  - name: Add alias rsrun (run an sql script on redshift)
    tags:
      - bashrc
    become: no
    lineinfile:
      create: yes
      path: ~/.bashrc_local
      regexp: 'alias rsrun'
      line: alias rsrun='~/tutti-dw/redshift-dw/rsrun.sh'

  - name: Make vim the default editor
    tags:
      - vim
    become: no
    lineinfile:
      create: yes
      path: ~/.selected_editor
      regexp: 'SELECTED'
      line: SELECTED_EDITOR="/usr/bin/vim.basic"

  - name: Remove useless packages from the cache
    apt:
      autoclean: yes

  - name: Remove dependencies that are no longer required
    apt:
      autoremove: yes

  - name: Set global git username
    become: no
    git_config:
      name: user.name
      scope: global
      value: "{{ git_user_name }}"

  - name: Set global git email
    become: no
    git_config:
      name: user.email
      scope: global
      value: "{{ git_user_email }}"

  - name: Set git editor
    tags:
      - vim
      - git
    become: no
    git_config:
      name: core.editor
      scope: global
      value: vim

  - name: Install vimrc
    tags:
      - vim
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/vimrc
      dest: ~/.vimrc
      mode: 0600
      force: yes

  - name: Download bashrc
    tags:
      - bashrc
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/bashrc
      dest: ~/.bashrc
      mode: 0600
      force: yes

  - name: Download bash_profile
    tags:
      - bashrc
      - bash_profile
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/bashrc
      dest: ~/.bash_profile
      mode: 0600
      force: yes

  - name: Download psqlrc
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/psqlrc
      dest: ~/.psqlrc
      mode: 0600
      force: yes

  - name: Download sqliterc
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/sqliterc
      dest: ~/.sqliterc
      mode: 0600
      force: yes

  - name: Create ~/.vim/autoload directory
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/autoload
      state: directory
      mode: 0755

  - name: Create ~/.vim/bundle directory
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/bundle
      state: directory
      mode: 0755

  - name: Create ~/.vim/undo directory
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/undo
      state: directory
      mode: 0755

  - name: Download pathogen.vim
    tags:
      - vim
    become: no
    get_url:
      url: https://tpo.pe/pathogen.vim
      dest: ~/.vim/autoload/pathogen.vim
      mode: 0644
      force: yes

  - name: Install vim-colors-solarized
    tags:
      - vim
    become: no
    git:
      repo: 'https://github.com/altercation/vim-colors-solarized.git'
      dest: ~/.vim/bundle/vim-colors-solarized
      clone: yes
      force: yes
      update: no

  - name: Install vim-airline
    tags:
      - vim
    become: no
    git:
      repo: 'https://github.com/vim-airline/vim-airline.git'
      dest: ~/.vim/bundle/vim-airline
      clone: yes
      force: yes
      update: no

  - name: Delete dir ~/.vim/bundle/vim-terraform before installing
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/bundle/vim-terraform
      state: absent

  - name: Install vim-terraform (if fails, delete its dir)
    tags:
      - vim
    become: no
    git:
      repo: 'https://github.com/hashivim/vim-terraform.git'
      dest: ~/.vim/bundle/vim-terraform
      clone: yes
      force: yes
      update: no

  - name: Install ripgrep from snap
    become: yes
    tags:
      - ripgrep
    shell: snap install ripgrep --classic

  - name: Install Pycharm from snap
    become: yes
    tags:
      - pycharm
    shell: snap install pycharm-professional --classic

  - name: Install VSCode
    shell: snap install code --classic


  - name: Create a directory for Gnome shells
    become: no
    file:
      path: ~/.local/share/gnome-shell/extensions
      state: directory
      mode: 0755

  - name: Install `Put Window` GNOME shell extension
    become: no
    git:
      repo: 'https://github.com/negesti/gnome-shell-extensions-negesti.git'
      dest: ~/.local/share/gnome-shell/extensions/putWindow@clemens.lab21.org
      clone: yes
      force: yes
      update: no
      version: v26

  - name: Install Slack
    apt:
      deb: https://downloads.slack-edge.com/linux_releases/slack-desktop-4.2.0-amd64.deb

  - name: Install dbeaver
    become: yes
    tags:
      - dbeaver
    apt:
      deb: https://github.com/dbeaver/dbeaver/releases/download/6.3.3/dbeaver-ce_6.3.3_amd64.deb

  - name: Fix audio 1 or 3
    become: yes
    lineinfile:
      path: /etc/modprobe.d/alsa-base.conf
      regexp: 'options.*snd-hda-intel.*single_cmd=1'
      line: options snd-hda-intel single_cmd=1

  - name: Fix audio 2 or 3
    become: yes
    lineinfile:
      path: /etc/modprobe.d/alsa-base.conf
      regexp: 'options.*snd-hda-intel.*probe_mask=1'
      line: options snd-hda-intel probe_mask=1

  - name: Fix audio 3 or 3
    become: yes
    lineinfile:
      path: /etc/modprobe.d/alsa-base.conf
      regexp: 'options.*snd-hda-intel.*model=basic'
      line: options snd-hda-intel model=basic

  - name : Download and unarchive Terraform
    become: no
    tags:
      - terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/0.14.6/terraform_0.14.6_linux_amd64.zip
      dest: ~/.local/bin/
      remote_src: yes

  - name: Install RStudio
    become: yes
    tags:
      - rstudio
    apt:
      deb: https://download1.rstudio.org/desktop/bionic/amd64/rstudio-1.4.1103-amd64.deb

  - name: Install fzf binary
    become: yes
    unarchive:
      src: https://github.com/junegunn/fzf-bin/releases/download/0.18.0/fzf-0.18.0-linux_amd64.tgz
      dest: /usr/local/bin
      remote_src: yes

  - name: Install 1Password command line utility
    become: yes
    unarchive:
      src: https://cache.agilebits.com/dist/1P/op/pkg/v0.8.0/op_linux_amd64_v0.8.0.zip
      dest: /usr/local/bin
      remote_src: yes


  - name: Increase inotify watches limit for PyCharm
    become: yes
    sysctl:
      name: fs.inotify.max_user_watches
      value: '524288'
      state: present

  - name: Create ~/.fonts directory
    tags:
      - fonts
    become: no
    file:
      path: ~/.fonts
      state: directory
      mode: 0755

  - name: Install JetBrains Mono font
    tags:
      - fonts
    become: no
    unarchive:
      src: https://download.jetbrains.com/fonts/JetBrainsMono-1.0.0.zip
      dest: ~/.fonts/
      remote_src: yes

  - name: Install B612 mono font
    tags:
      - fonts
    become: no
    unarchive:
      src: https://fonts.google.com/download?family=B612%20Mono
      dest: ~/.fonts/
      remote_src: yes

  - name: Update fonts cache
    become: yes
    tags:
      - fonts
    shell: fc-cache --force
